---
import LanguageButtons from "../components/header/LanguageButtons.astro";
// import LightDarkModeButttons from "../components/header/lightDarkModeButttons.astro";

const supportedLanguages: string[] = ['es', 'en'];
const defaultLanguage: string = 'en';

const currentPath: string = Astro.url.pathname;

const languageSegment: string = currentPath.split('/')[1];

const language: string = supportedLanguages.includes(languageSegment) ? languageSegment : defaultLanguage;

if (!languageSegment || !supportedLanguages.includes(languageSegment)) {
  return Astro.redirect(`/${defaultLanguage}${currentPath}`);
}
---

<header class="sticky w-full top-5 z-1000 text-sm font-semibold flex text-white">
  {/* MEDIUM SCREENS */}
  <div class="hidden lg:block w-full flex flex-col gap-y-4">
    <div class="w-full flex gap-x-4">
      <div class="w-full grid grid-cols-[1fr_2fr_1fr] gap-10 px-10 bg-[#292929] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md">
        <a href=`${language === 'en' ? "/en" : "/es"}`>
          <img src="https://res.cloudinary.com/dmfr1l3tj/image/upload/v1741597826/logo-fp_hnk3eb.webp" alt="Mi logo" class="h-10 py-1 object-cover">
        </a>

        <div>
          <nav>
            <ul class="flex justify-center">
              <li class="hover:bg-my-gray hover:shadow-sm">
                <a href="#" class="px-4 py-3 block w-full h-full">{ language === "en" ? "About me" : "Sobre mí" }</a>
              </li>
              <li class="hover:bg-my-gray hover:shadow-sm">
                <a href="#projects" class="px-4 py-3 block w-full h-full">{ language === "en" ? "Projects" : "Proyectos" }</a>
              </li>
              <li class="hover:bg-my-gray hover:shadow-sm">
                <a href="#skills" class="px-4 py-3 block w-full h-full">{ language === "en" ? "Skills" : "Habilidades" }</a>
              </li>
            </ul>
          </nav>
        </div>

        <LanguageButtons isSmallScreen={false}/>
      </div>
{/*
      <div class="px-3 flex justify-center items-center bg-[#303030] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md">
        <LanguageButtons />
        
          <button
            id="toggle-options-button"
            type="button"
            aria-label="Toggle options"
            class="flex h-full py-3 px-4 bg-[#303030] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md hover:bg-my-gray"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" color="currentColor"><path d="m21.318 7.141l-.494-.856c-.373-.648-.56-.972-.878-1.101c-.317-.13-.676-.027-1.395.176l-1.22.344c-.459.106-.94.046-1.358-.17l-.337-.194a2 2 0 0 1-.788-.967l-.334-.998c-.22-.66-.33-.99-.591-1.178c-.261-.19-.609-.19-1.303-.19h-1.115c-.694 0-1.041 0-1.303.19c-.261.188-.37.518-.59 1.178l-.334.998a2 2 0 0 1-.789.967l-.337.195c-.418.215-.9.275-1.358.17l-1.22-.345c-.719-.203-1.078-.305-1.395-.176c-.318.129-.505.453-.878 1.1l-.493.857c-.35.608-.525.911-.491 1.234c.034.324.268.584.736 1.105l1.031 1.153c.252.319.431.875.431 1.375s-.179 1.056-.43 1.375l-1.032 1.152c-.468.521-.702.782-.736 1.105s.14.627.49 1.234l.494.857c.373.647.56.971.878 1.1s.676.028 1.395-.176l1.22-.344a2 2 0 0 1 1.359.17l.336.194c.36.23.636.57.788.968l.334.997c.22.66.33.99.591 1.18c.262.188.609.188 1.303.188h1.115c.694 0 1.042 0 1.303-.189s.371-.519.59-1.179l.335-.997c.152-.399.428-.738.788-.968l.336-.194c.42-.215.9-.276 1.36-.17l1.22.344c.718.204 1.077.306 1.394.177c.318-.13.505-.454.878-1.101l.493-.857c.35-.607.525-.91.491-1.234s-.268-.584-.736-1.105l-1.031-1.152c-.252-.32-.431-.875-.431-1.375s.179-1.056.43-1.375l1.032-1.153c.468-.52.702-.781.736-1.105s-.14-.626-.49-1.234"/><path d="M15.52 12a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0"/></g></svg>
          </button>
        
      </div>*/}
    </div>

    <!-- Contenedor de opciones -->
    <div id="options" class="absolute invisible flex justify-end top-15 right-0">
      <div class="w-24 flex flex-col py-4 px-4 gap-y-4 bg-[#303030] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md">
        <LanguageButtons isSmallScreen={false}/>
        {/*
          <LightDarkModeButttons />
        */}
      </div>
    </div>
  </div>



  {/* SMALL SCREENS */}
  <div class="top-5 block lg:hidden w-full flex flex-col space-y-3">
    <div class="w-full flex gap-x-4">
      <div class="w-full flex justify-between items-center px-7 bg-[#292929] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md">
        <div>
          <img src="https://res.cloudinary.com/dmfr1l3tj/image/upload/v1741656903/logo-cuadrado_t4bhgw.webp" alt="Mi logo" class="h-12 py-2 object-cover">
        </div>

        <div class="flex items-center">
          <button type="button" id="toggle-settings-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="#FEFCFB" d="M4 18q-.425 0-.712-.288T3 17t.288-.712T4 16h16q.425 0 .713.288T21 17t-.288.713T20 18zm0-5q-.425 0-.712-.288T3 12t.288-.712T4 11h16q.425 0 .713.288T21 12t-.288.713T20 13zm0-5q-.425 0-.712-.288T3 7t.288-.712T4 6h16q.425 0 .713.288T21 7t-.288.713T20 8z"/></svg>
          </button>
      </div>

      <div id="settings" class="absolute left-1/2 -translate-x-1/2 top-15 w-full bg-[#292929] border-[1px] border-[#E5E7EB55] rounded-4xl shadow-md flex flex-col">
        <div>
          <nav>
            <ul class="flex flex-col itmes-center">
              <li class="hover:bg-my-gray hover:shadow-sm hover:rounded-t-4xl">
                <a href="#" id="about-link" class="text-center px-4 py-3 block w-full h-full">{ language === "en" ? "About me" : "Sobre mí" }</a>
              </li>
              <li class="hover:bg-my-gray hover:shadow-sm">
                <a href="#projects" id="projects-link" class="text-center px-4 py-3 block w-full h-full">{ language === "en" ? "Projects" : "Proyectos" }</a>
              </li>
              <li class="hover:bg-my-gray hover:shadow-sm">
                <a href="#skills" id="skills-link" class="text-center px-4 py-3 block w-full h-full">{ language === "en" ? "Skills" : "Habilidades" }</a>
              </li>
            </ul>
          </nav>
        </div>

          <div class="m-auto w-[85%] h-[1px] bg-[#E5E7EB55]"></div>

          <LanguageButtons isSmallScreen={true}/>
          {/*
          <LightDarkModeButttons />
          */}
        </div>
      </div>
    </div>
  </div>  
</header>

<script>
  const toggleOptionsButton = document.getElementById('toggle-options-button');
  const options = document.getElementById('options');

  options?.classList.add('invisible');

  toggleOptionsButton?.addEventListener('click', () => {
    if (options?.classList.contains('invisible')) {
      options.classList.remove('invisible');
      options.classList.add('visible');
      toggleOptionsButton?.classList.add('[box-shadow:inset_0_0_0_1px_#000]');
    } else {
      options?.classList.remove('visible');
      options?.classList.add('invisible');
      toggleOptionsButton?.classList.remove('[box-shadow:inset_0_0_0_1px_#000]');
    }
  });
</script>

<script>
  const toggleSettingsButton = document.getElementById('toggle-settings-button');
  const settings = document.getElementById('settings');

  settings?.classList.add('invisible');

  toggleSettingsButton?.addEventListener('click', () => {
    if (settings?.classList.contains('invisible')) {
      settings.classList.remove('invisible');
      settings.classList.add('visible');
      toggleSettingsButton?.classList.add('[box-shadow:inset_0_0_0_1px_#000]');
    } else {
      settings?.classList.remove('visible');
      settings?.classList.add('invisible');
      toggleSettingsButton?.classList.remove('[box-shadow:inset_0_0_0_1px_#000]');
    }
  });
</script>

<script>
  const aboutLink = document.getElementById('about-link') as HTMLAnchorElement | null;
  const projectsLink = document.getElementById('projects-link') as HTMLAnchorElement | null;
  const skillsLink = document.getElementById('skills-link') as HTMLAnchorElement | null;
  

  if (aboutLink && projectsLink && skillsLink) {
    setEventListenerToHideMenu(aboutLink);
    setEventListenerToHideMenu(projectsLink);
    setEventListenerToHideMenu(skillsLink);
}

  function setEventListenerToHideMenu (element: HTMLAnchorElement | null) {
    const settings = document.getElementById('settings') as HTMLElement | null;

    element?.addEventListener('click', (e) => {
      e.preventDefault();
      
      settings?.classList.toggle('visible');
      settings?.classList.toggle('invisible');

      setTimeout(() => {
        window.location.href = element.href;
      }, 200);
    });
  }
</script>